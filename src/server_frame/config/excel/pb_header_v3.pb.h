// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_header_v3.proto

#ifndef PROTOBUF_pb_5fheader_5fv3_2eproto__INCLUDED
#define PROTOBUF_pb_5fheader_5fv3_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace owent {
namespace xresloader {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pb_5fheader_5fv3_2eproto();
void protobuf_AssignDesc_pb_5fheader_5fv3_2eproto();
void protobuf_ShutdownFile_pb_5fheader_5fv3_2eproto();

class xresloader_datablocks;
class xresloader_header;

// ===================================================================

class xresloader_header : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.owent.xresloader.pb.xresloader_header) */ {
 public:
  xresloader_header();
  virtual ~xresloader_header();

  xresloader_header(const xresloader_header& from);

  inline xresloader_header& operator=(const xresloader_header& from) {
    CopyFrom(from);
    return *this;
  }

  static const xresloader_header& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const xresloader_header* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(xresloader_header* other);

  // implements Message ----------------------------------------------

  inline xresloader_header* New() const { return New(NULL); }

  xresloader_header* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const xresloader_header& from);
  void MergeFrom(const xresloader_header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xresloader_header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string xres_ver = 1;
  void clear_xres_ver();
  static const int kXresVerFieldNumber = 1;
  const ::std::string& xres_ver() const;
  void set_xres_ver(const ::std::string& value);
  void set_xres_ver(const char* value);
  void set_xres_ver(const char* value, size_t size);
  ::std::string* mutable_xres_ver();
  ::std::string* release_xres_ver();
  void set_allocated_xres_ver(::std::string* xres_ver);

  // optional string data_ver = 2;
  void clear_data_ver();
  static const int kDataVerFieldNumber = 2;
  const ::std::string& data_ver() const;
  void set_data_ver(const ::std::string& value);
  void set_data_ver(const char* value);
  void set_data_ver(const char* value, size_t size);
  ::std::string* mutable_data_ver();
  ::std::string* release_data_ver();
  void set_allocated_data_ver(::std::string* data_ver);

  // optional uint32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional string hash_code = 4;
  void clear_hash_code();
  static const int kHashCodeFieldNumber = 4;
  const ::std::string& hash_code() const;
  void set_hash_code(const ::std::string& value);
  void set_hash_code(const char* value);
  void set_hash_code(const char* value, size_t size);
  ::std::string* mutable_hash_code();
  ::std::string* release_hash_code();
  void set_allocated_hash_code(::std::string* hash_code);

  // @@protoc_insertion_point(class_scope:com.owent.xresloader.pb.xresloader_header)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr xres_ver_;
  ::google::protobuf::internal::ArenaStringPtr data_ver_;
  ::google::protobuf::internal::ArenaStringPtr hash_code_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_pb_5fheader_5fv3_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_pb_5fheader_5fv3_2eproto();
  #endif
  friend void protobuf_AssignDesc_pb_5fheader_5fv3_2eproto();
  friend void protobuf_ShutdownFile_pb_5fheader_5fv3_2eproto();

  void InitAsDefaultInstance();
  static xresloader_header* default_instance_;
};
// -------------------------------------------------------------------

class xresloader_datablocks : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:com.owent.xresloader.pb.xresloader_datablocks) */ {
 public:
  xresloader_datablocks();
  virtual ~xresloader_datablocks();

  xresloader_datablocks(const xresloader_datablocks& from);

  inline xresloader_datablocks& operator=(const xresloader_datablocks& from) {
    CopyFrom(from);
    return *this;
  }

  static const xresloader_datablocks& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const xresloader_datablocks* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(xresloader_datablocks* other);

  // implements Message ----------------------------------------------

  inline xresloader_datablocks* New() const { return New(NULL); }

  xresloader_datablocks* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const xresloader_datablocks& from);
  void MergeFrom(const xresloader_datablocks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(xresloader_datablocks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.owent.xresloader.pb.xresloader_header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::com::owent::xresloader::pb::xresloader_header& header() const;
  ::com::owent::xresloader::pb::xresloader_header* mutable_header();
  ::com::owent::xresloader::pb::xresloader_header* release_header();
  void set_allocated_header(::com::owent::xresloader::pb::xresloader_header* header);

  // repeated bytes data_block = 2;
  int data_block_size() const;
  void clear_data_block();
  static const int kDataBlockFieldNumber = 2;
  const ::std::string& data_block(int index) const;
  ::std::string* mutable_data_block(int index);
  void set_data_block(int index, const ::std::string& value);
  void set_data_block(int index, const char* value);
  void set_data_block(int index, const void* value, size_t size);
  ::std::string* add_data_block();
  void add_data_block(const ::std::string& value);
  void add_data_block(const char* value);
  void add_data_block(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& data_block() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data_block();

  // @@protoc_insertion_point(class_scope:com.owent.xresloader.pb.xresloader_datablocks)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::com::owent::xresloader::pb::xresloader_header* header_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_block_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_pb_5fheader_5fv3_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_pb_5fheader_5fv3_2eproto();
  #endif
  friend void protobuf_AssignDesc_pb_5fheader_5fv3_2eproto();
  friend void protobuf_ShutdownFile_pb_5fheader_5fv3_2eproto();

  void InitAsDefaultInstance();
  static xresloader_datablocks* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// xresloader_header

// optional string xres_ver = 1;
inline void xresloader_header::clear_xres_ver() {
  xres_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& xresloader_header::xres_ver() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.xres_ver)
  return xres_ver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xresloader_header::set_xres_ver(const ::std::string& value) {
  
  xres_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.xres_ver)
}
inline void xresloader_header::set_xres_ver(const char* value) {
  
  xres_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_header.xres_ver)
}
inline void xresloader_header::set_xres_ver(const char* value, size_t size) {
  
  xres_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_header.xres_ver)
}
inline ::std::string* xresloader_header::mutable_xres_ver() {
  
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_header.xres_ver)
  return xres_ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* xresloader_header::release_xres_ver() {
  // @@protoc_insertion_point(field_release:com.owent.xresloader.pb.xresloader_header.xres_ver)
  
  return xres_ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xresloader_header::set_allocated_xres_ver(::std::string* xres_ver) {
  if (xres_ver != NULL) {
    
  } else {
    
  }
  xres_ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xres_ver);
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_header.xres_ver)
}

// optional string data_ver = 2;
inline void xresloader_header::clear_data_ver() {
  data_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& xresloader_header::data_ver() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.data_ver)
  return data_ver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xresloader_header::set_data_ver(const ::std::string& value) {
  
  data_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.data_ver)
}
inline void xresloader_header::set_data_ver(const char* value) {
  
  data_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_header.data_ver)
}
inline void xresloader_header::set_data_ver(const char* value, size_t size) {
  
  data_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_header.data_ver)
}
inline ::std::string* xresloader_header::mutable_data_ver() {
  
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_header.data_ver)
  return data_ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* xresloader_header::release_data_ver() {
  // @@protoc_insertion_point(field_release:com.owent.xresloader.pb.xresloader_header.data_ver)
  
  return data_ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xresloader_header::set_allocated_data_ver(::std::string* data_ver) {
  if (data_ver != NULL) {
    
  } else {
    
  }
  data_ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_ver);
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_header.data_ver)
}

// optional uint32 count = 3;
inline void xresloader_header::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 xresloader_header::count() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.count)
  return count_;
}
inline void xresloader_header::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.count)
}

// optional string hash_code = 4;
inline void xresloader_header::clear_hash_code() {
  hash_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& xresloader_header::hash_code() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_header.hash_code)
  return hash_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xresloader_header::set_hash_code(const ::std::string& value) {
  
  hash_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_header.hash_code)
}
inline void xresloader_header::set_hash_code(const char* value) {
  
  hash_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_header.hash_code)
}
inline void xresloader_header::set_hash_code(const char* value, size_t size) {
  
  hash_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_header.hash_code)
}
inline ::std::string* xresloader_header::mutable_hash_code() {
  
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_header.hash_code)
  return hash_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* xresloader_header::release_hash_code() {
  // @@protoc_insertion_point(field_release:com.owent.xresloader.pb.xresloader_header.hash_code)
  
  return hash_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void xresloader_header::set_allocated_hash_code(::std::string* hash_code) {
  if (hash_code != NULL) {
    
  } else {
    
  }
  hash_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash_code);
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_header.hash_code)
}

// -------------------------------------------------------------------

// xresloader_datablocks

// optional .com.owent.xresloader.pb.xresloader_header header = 1;
inline bool xresloader_datablocks::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void xresloader_datablocks::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::com::owent::xresloader::pb::xresloader_header& xresloader_datablocks::header() const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_datablocks.header)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return header_ != NULL ? *header_ : *default_instance().header_;
#else
  return header_ != NULL ? *header_ : *default_instance_->header_;
#endif
}
inline ::com::owent::xresloader::pb::xresloader_header* xresloader_datablocks::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::com::owent::xresloader::pb::xresloader_header;
  }
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_datablocks.header)
  return header_;
}
inline ::com::owent::xresloader::pb::xresloader_header* xresloader_datablocks::release_header() {
  // @@protoc_insertion_point(field_release:com.owent.xresloader.pb.xresloader_datablocks.header)
  
  ::com::owent::xresloader::pb::xresloader_header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void xresloader_datablocks::set_allocated_header(::com::owent::xresloader::pb::xresloader_header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.owent.xresloader.pb.xresloader_datablocks.header)
}

// repeated bytes data_block = 2;
inline int xresloader_datablocks::data_block_size() const {
  return data_block_.size();
}
inline void xresloader_datablocks::clear_data_block() {
  data_block_.Clear();
}
inline const ::std::string& xresloader_datablocks::data_block(int index) const {
  // @@protoc_insertion_point(field_get:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return data_block_.Get(index);
}
inline ::std::string* xresloader_datablocks::mutable_data_block(int index) {
  // @@protoc_insertion_point(field_mutable:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return data_block_.Mutable(index);
}
inline void xresloader_datablocks::set_data_block(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  data_block_.Mutable(index)->assign(value);
}
inline void xresloader_datablocks::set_data_block(int index, const char* value) {
  data_block_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline void xresloader_datablocks::set_data_block(int index, const void* value, size_t size) {
  data_block_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline ::std::string* xresloader_datablocks::add_data_block() {
  // @@protoc_insertion_point(field_add_mutable:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return data_block_.Add();
}
inline void xresloader_datablocks::add_data_block(const ::std::string& value) {
  data_block_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline void xresloader_datablocks::add_data_block(const char* value) {
  data_block_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline void xresloader_datablocks::add_data_block(const void* value, size_t size) {
  data_block_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.owent.xresloader.pb.xresloader_datablocks.data_block)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
xresloader_datablocks::data_block() const {
  // @@protoc_insertion_point(field_list:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return data_block_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
xresloader_datablocks::mutable_data_block() {
  // @@protoc_insertion_point(field_mutable_list:com.owent.xresloader.pb.xresloader_datablocks.data_block)
  return &data_block_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace xresloader
}  // namespace owent
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pb_5fheader_5fv3_2eproto__INCLUDED
