[atapp]
; =========== bus configure ===========
id = 0x00008201                         ; bus id
hostname = ""                           ; hostname, any host should has a unique name. if empty, use the hostname of system network
bus.listen = 'ipv6://:::38201'          ; shared memory channel
;bus.listen = 'shm://0x16008201'         ; shared memory channel

bus.children_mask = 0                   ; children mask(at most 2^16 children )
bus.options.global_router = false       ; gamesvr keep all router data
bus.proxy = 'ipv6://:::21401'           ; gamesvr must has parent node
bus.loop_times = 1000                   ; max message number in one loop
bus.ttl = 16                            ; max ttl when transfer messages
bus.backlog = 256                       ; tcp backlog
bus.first_idle_timeout = 30             ; first idle timeout when have new connection(second)
bus.ping_interval = 60                  ; ping interval(second)
bus.retry_interval = 3                  ; retry interval when error happen(second)
bus.fault_tolerant = 3                  ; how many errors will lead to kill connection
bus.msg_size = 65536                    ; max message size(64KB)
bus.recv_buffer_size = 2097152          ; recv channel size(2MB), will be used to initialize (shared) memory channel size
bus.send_buffer_size = 65536            ; send buffer size, will be used to initialize io_stream channel write queue
bus.send_buffer_number = 0              ; send message number limit, will be used to initialize io_stream channel write queue, 0 for dynamic buffer

; =========== upper configures can not be reload ===========
; =========== log configure ===========
log.level = 6                           ; log active level
log.cat.number = 4                      ; 4 log categorizes

log.cat.0.name = default                ; log categorize 1's name = default
log.cat.0.prefix = "[Log %L][%F %T.%f][%s:%n(%C)]: "
log.cat.1.name = db                     ; log categorize 2's name = db
log.cat.1.prefix = "[%F %T.%f]: "
log.cat.2.name = proto_stat             ; log categorize 3's name = proto_stat
log.cat.2.prefix = "[%F %T.%f]: "
log.cat.3.name = pay                    ; log categorize 4's name = pay
log.cat.3.prefix = "[%F %T.%f]: "

; default error log for file
log.default.0.type = file
log.default.0.level.min = 1
log.default.0.level.max = 3
log.default.0.rotate.number = 10
log.default.0.rotate.size = 10485760 ; 10MB
log.default.0.rotate.interval = 60 ; 60s
log.default.0.file = ../log/gamesvr-1.error.%N.log
log.default.0.auto_flush = 4

log.default.1.type = file
log.default.1.level.min = 1
log.default.1.level.max = 6
log.default.1.rotate.number = 10
log.default.1.rotate.size = 10485760 ; 10MB
log.default.1.rotate.interval = 60 ; 60s
log.default.1.file = ../log/gamesvr-1.all.%N.log
log.default.1.auto_flush = 4

log.db.0.type = file
log.db.0.level.min = 1
log.db.0.level.max = 6
log.db.0.rotate.number = 10
log.db.0.rotate.size = 10485760 ; 10MB
log.db.0.rotate.interval = 60 ; 60s
log.db.0.file = ../log/gamesvr-1.db.%N.log
log.db.0.auto_flush = 4

log.proto_stat.0.type = file
log.proto_stat.0.level.min = 1
log.proto_stat.0.level.max = 6
log.proto_stat.0.rotate.number = 10
log.proto_stat.0.rotate.size = 20971520 ; 20MB
log.proto_stat.0.rotate.interval = 60 ; 60s
log.proto_stat.0.file = ../log/gamesvr-1.pstat.%N.log
log.proto_stat.0.auto_flush = 4

log.pay.0.type = file
log.pay.0.level.min = 1
log.pay.0.level.max = 6
log.pay.0.rotate.number = 10
log.pay.0.rotate.size = 20971520 ; 20MB
log.pay.0.rotate.interval = 60 ; 60s
log.pay.0.file = ../log/gamesvr-1.pay.%N.log
log.pay.0.auto_flush = 4

; =========== timer ===========
timer.tick_interval = 32                ; 32ms for tick active
timer.stop_timeout = 10000              ; 10s for stop operation

; =========== external configure files ===========
; config.external =

[db]
db.cluster.default.host = 127.0.0.1:7001-7006
db.raw.default.host = 127.0.0.1

script.login = login.lua
script.player = player.lua

time.retry.sec = 0          ; retry wait time(second)
time.retry.usec = 100000    ; retry wait time(microsecond)
time.timeout = 75           ; timeout(second)
time.proc = 128             ; proc interval(milisecond)

[logic]
zone.id = 0                             ; zone id
zone.step = 256                         ; zone step

server.open_service_time = 0            ; open time if server not serve client fow now
server.maintenance_mode = 0             ; maintenance mode
server.resource.dir = ../../resource    ; resource directory

player.max_online = 20000               ; max online number
player.default_openid = gm://system     ; default openid for system action
player.auto_save.interval = 600         ; auto save interval
player.auto_save.limit = 3              ; auto save retry times if failed
player.cache.expire_time = 1200         ; cache expire time
player.cache.max_retry_times = 3        ; cache retry times

session.login_code_protect = 1200       ; protect time when login failed
session.login_code_valid_sec = 600      ; login code expire time
session.login_ban_time = 10800          ; ban time when login event
session.tick_sec = 60                   ; session event interval

task.stack.size = 524288                ; task stack size.(512KB)
task.csmsg.timeout = 5                  ; csmsg task timeout
task.nomsg.timeout = 1800               ; nomsg task timeout
task.paymsg.timeout = 300               ; paymsg task timeout

heartbeat.interval = 120                ; heartbeat interval
heartbeat.tolerance = 20                ; heartbeat network latency tolerance
heartbeat.error_times = 4               ; heartbeat error times to kickoff
heartbeat.ban_error_times = 3           ; heatbeat ban account of continue kickoff
heartbeat.ban_time_bound = 10800        ; heartbeat ban time

[gamesvr]
