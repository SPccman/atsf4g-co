<%!
    import common.project_utils as project
%><%include file="atapp.template.conf" />

[atgateway]
; listen address for client to connect, how to use it depends listen.type
% if project.is_ip_v6_enabled():
listen.address = ipv6://:::${project.get_server_gateway_port(atgateway_server_name, atgateway_server_index)}
% else: 
listen.address = ipv4://0.0.0.0:${project.get_server_gateway_port(atgateway_server_name, atgateway_server_index)}
% endif
listen.type = inner                     ; protocol type
listen.max_client = 65536               ; max client number, more client will be closed
listen.backlog = 128

; default router ${hex(project.get_server_proc_id(atgateway_server_name, atgateway_server_index))} 
client.router.default = ${project.get_server_proc_id(atgateway_server_name, atgateway_server_index)} 
client.send_buffer_size = 1048576       ; 1MB send buffer limit
client.reconnect_timeout = 180          ; reconnect timeout
client.first_idle_timeout = 10          ; first idle timeout

client.limit.total_send = 0             ; total send limit (bytes)
client.limit.total_recv = 0             ; total recv limit (bytes)
client.limit.hour_send = 0              ; send limit (bytes) in an hour
client.limit.hour_recv = 0              ; recv limit (bytes) in an hour
client.limit.minute_send = 0            ; total send (bytes) limit in one minute
client.limit.minute_recv = 0            ; total recv (bytes) limit in one minute
client.limit.message_size = 0           ; message size limit

; below descript the crypt information, but if it's used depend on listen.type
client.crypt.key = gateway-default                          ; default key
client.crypt.type = XXTEA                                   ; encrypt algorithm(support XXTEA,AES when  listen.type=inner)
client.crypt.keybits = 128                                  ; AES can be 128,192 or 256, XXTEA will ignore and use 128bits
client.crypt.update_interval = 300                          ; update a new key for 5 minutes
client.crypt.dhparam = ../etc/dhparam.pem                   ; dynamic key
client.crypt.rsa.public_key = ../etc/public.crt             ; RSA, public key(unavailable now, please use dhparam)
client.crypt.rsa.private_key = ../etc/private.key           ; RSA, private key(unavailable now, please use dhparam)
client.crypt.rsa.sign = pkcs1                               ; RSA, PKCS#1 (unavailable now, please use dhparam)
client.crypt.hash_id = sha256                               ; Hash id, may be used in RSA (available: md5, sha1, sha256, sha512)
